# Generated by Django 4.2.20 on 2025-03-19 19:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ViolationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Виды нарушений',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('unique_id', models.CharField(max_length=7, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(max_length=40, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=40, verbose_name='Отчество')),
                ('role', models.CharField(choices=[('T', 'Учитель'), ('S', 'Ученик')], max_length=2, verbose_name='Роль')),
                ('photo', models.ImageField(blank=True, upload_to='images', verbose_name='Фото')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('phone_number', models.CharField(max_length=15, unique=True, verbose_name='Номер телефона')),
                ('date_registr', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('date_last_edit', models.DateTimeField(auto_now=True, verbose_name='Дата последнего редактирования')),
                ('date_birth', models.DateField(verbose_name='Дата рождения')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('violations', models.ManyToManyField(blank=True, to='account.violationtype')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
